@mixin fSize($wmax, $wmin, $fmax, $fmin){
  font-size: calc((100vw - #{strip-unit($wmin)}px)/(#{strip-unit($wmax)} - #{strip-unit($wmin)})*(#{strip-unit($fmax)} - #{strip-unit($fmin)}) + #{strip-unit($fmin)}px);
  @media screen and (min-width: #{strip-unit($wmax)}px) {
    font-size: #{strip-unit($fmax)}px;
  }
  @media screen and (max-width: #{strip-unit($wmin)}px) {
    font-size: #{strip-unit($fmin)}px;
  }
}
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return  math.div($number, $number * 0 + 1);
  }

  @return $number;
}
// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin breakpoint-up($sizeBreakpoint) {
  @media (min-width: $sizeBreakpoint) {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin breakpoint-down($sizeBreakpoint) {
  @media (max-width: $sizeBreakpoint) {
    @content;
  }
}